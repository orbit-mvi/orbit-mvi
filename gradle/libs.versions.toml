#
# Copyright 2023-2025 Mikołaj Leszczyński & Appmattus Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

[versions]

kotlin = "2.1.21"
coroutines = "1.10.2"

# Plugins
gradleVersionsPlugin = "0.52.0"
gradleAndroidPlugin = "8.10.0"
gradleMavenPublishPlugin = "0.32.0"
markdownLintPlugin = "0.6.0"
detektPlugin = "1.23.8"
dokka = "2.0.0"
compose-multiplatform = "1.8.0"
hilt = "2.56.2"

# Androidx
androidxActivityCompose = "1.10.1"
androidxAppcompat = "1.7.0"
androidxCollection = "1.5.0"
androidxCompose = "1.8.1"
androidxComposeMaterialIconsMultiplatform = "1.7.3"
androidxConstraintlayout = "2.2.1"
androidxHilt = "1.2.0"
androidxLifecycle = "2.9.0"
androidxLifecycleMultiplatform = "2.9.0-beta01"
androidxNavigation = "2.9.0"
androidxNavigationMultiplatform = "2.9.0-beta01"

# Google
googleMaterial = "1.12.0"

# Misc
coil = "3.2.0"
desugar = "2.1.5"
glide = "4.16.0"
groupie = "2.10.1"
jacksonKotlin = "2.19.0"
koin = "4.0.4"
ktor = "3.1.3"
lsAndroidClient = "5.2.2"
okhttp = "4.12.0"
retrofit = "2.11.0"

# Testing
androidxCoreTesting = "2.2.0"
androidxEspresso = "3.6.1"
jacoco = "0.8.12"
junit4 = "4.13.2"
junitJupiterEngine = "5.12.2"
junitPlatformConsole = "1.12.2"
kotlinFixture = "1.2.0"
mockito = "5.17.0"
mockitoKotlin = "5.4.0"
robolectric = "4.14.1"
turbine = "1.2.0"

[libraries]

# Kotlin
hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hiltAndroidCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
kotlinCoroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinCoroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinCoroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# AndroidX
androidxActivityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivityCompose" }
androidxAppcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppcompat" }
androidxCollection = { module = "androidx.collection:collection", version.ref = "androidxCollection" }
androidxComposeFoundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidxCompose" }
androidxComposeMaterial = { module = "androidx.compose.material:material", version.ref = "androidxCompose" }
androidxComposeMaterialIconsCoreMultiplafrom = { module = "org.jetbrains.compose.material:material-icons-core", version.ref = "androidxComposeMaterialIconsMultiplatform" }
androidxComposeRuntime = { module = "androidx.compose.runtime:runtime", version.ref = "androidxCompose" }
androidxComposeUi = { module = "androidx.compose.ui:ui", version.ref = "androidxCompose" }
androidxComposeUiTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidxCompose" }
androidxConstraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidxConstraintlayout" }
androidxEspressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxEspresso" }
androidxEspressoIdlingResource = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "androidxEspresso" }
androidxHiltNavigationCompose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidxHilt" }
androidxLifecycleCommonJava8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "androidxLifecycle" }
androidxLifecycleLivedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
androidxLifecycleRuntime = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime", version.ref = "androidxLifecycleMultiplatform" }
androidxLifecycleRuntimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycleMultiplatform" }
androidxLifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidxLifecycleViewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidxLifecycleMultiplatform" }
androidxLifecycleViewmodelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidxLifecycleViewmodelSavedState = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidxLifecycleMultiplatform" }
androidxNavigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigation" }
androidxNavigationComposeMultiplatform = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidxNavigationMultiplatform" }
androidxNavigationFragmentKtx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidxNavigation" }
androidxNavigationUiKtx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidxNavigation" }

# Google
googleMaterial = { module = "com.google.android.material:material", version.ref = "googleMaterial" }

# Misc
coilCompose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coilNetworkKtor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
groupie = { module = "com.github.lisawray.groupie:groupie", version.ref = "groupie" }
groupieKotlinAndroidExtensions = { module = "com.github.lisawray.groupie:groupie-kotlin-android-extensions", version.ref = "groupie" }
groupieViewbinding = { module = "com.github.lisawray.groupie:groupie-viewbinding", version.ref = "groupie" }
jacksonKotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jacksonKotlin" }
koinAndroid = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koinCore = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koinCompose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koinComposeViewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koinComposeViewmodelNavigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin" }
ktorClientAndroid = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktorClientCio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktorClientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorClientIos = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktorSerializationKotlinxJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
lsAndroidClient = { module = "com.lightstreamer:ls-android-client", version.ref = "lsAndroidClient" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitConverterJackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit" }

# Testing
androidxComposeUiTestJunit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidxCompose" }
androidxComposeUiTestManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidxCompose" }
androidxCoreTesting = { module = "androidx.arch.core:core-testing", version.ref = "androidxCoreTesting" }
junit4 = { module = "junit:junit", version.ref = "junit4" }
junitJupiterApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiterEngine" }
junitJupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiterEngine" }
junitJupiterParams = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junitJupiterEngine" }
junitPlatformConsole = { module = "org.junit.platform:junit-platform-console", version.ref = "junitPlatformConsole" }
kotlinFixture = { module = "com.appmattus.fixture:fixture", version.ref = "kotlinFixture" }
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
retrofitMock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# Tools
detektFormatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detektPlugin" }

# Plugins
buildscript_android = { module = "com.android.tools.build:gradle", version.ref = "gradleAndroidPlugin" }
buildscript_kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
buildscript_detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detektPlugin" }
buildscript_safeargs = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "androidxNavigation" }
buildscript_hilt = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }

[plugins]

dokkaPlugin = { id = "org.jetbrains.dokka", version.ref = "dokka" }
gradleMavenPublishPlugin = { id = "com.vanniktech.maven.publish", version.ref = "gradleMavenPublishPlugin" }
gradleVersionsPlugin = { id = "com.github.ben-manes.versions", version.ref = "gradleVersionsPlugin" }
markdownlintGradlePlugin = { id = "com.appmattus.markdown", version.ref = "markdownLintPlugin" }
kotlin-pluginSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
