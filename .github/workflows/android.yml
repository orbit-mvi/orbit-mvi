name: Android CI

on:
  push:
    branches:
      - main
      - orbit/main
      - feature/**
    tags:
      - '**'
  pull_request:
    branches:
      - main
      - orbit/main
      - feature/**

jobs:
  static-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: gradle wrapper cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-gradlewrapper

      - name: Detekt
        run: ./gradlew detekt

      - name: Markdown lint
        run: ./gradlew markdownlint

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: gradle wrapper cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-gradlewrapper

      - name: Lint
        run: ./gradlew lint

  unit-tests:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: gradle wrapper cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-gradlewrapper

      - name: konan cache
        uses: actions/cache@v1
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan

      - name: Unit tests
        run: ./gradlew check -xlint

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: test-results
          path: '**/build/reports/tests/**'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.5.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  create_staging_repository:
      runs-on: ubuntu-latest
      needs: [ static-checks, lint, unit-tests ]
      name: Create staging repository
      outputs:
          repository_id: ${{ steps.create.outputs.repository_id }}
      steps:
        -  id: create
           if: startsWith(github.ref, 'refs/tags/')
           uses: nexus-actions/create-nexus-staging-repo@v1.1
           with:
             username: orbitmvi
             password: ${{ secrets.SONATYPE_PASSWORD }}
             staging_profile_id: ${{ secrets.SONATYPE_PROFILE_ID }}
             description: ${{ github.repository }}/${{ github.workflow }}#${{ github.run_number }}

  build:
    needs: [ create_staging_repository ]
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: gradle wrapper cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-gradlewrapper

      - name: konan cache
        uses: actions/cache@v1
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan

      - name: Build
        run: ./gradlew clean assemble -xassembleDebug

      - name: Prepare tag properties (*nix)
        if: runner.os != 'Windows' && startsWith(github.ref, 'refs/tags/')
        run: |
            echo "${{secrets.GPG_SIGNING_SECRET_KEY_RING_FILE_BASE64}}" > $HOME/.gradle/sonatype-orbitmvi-keys.gpg.b64
            base64 -d $HOME/.gradle/sonatype-orbitmvi-keys.gpg.b64 > $HOME/.gradle/sonatype-orbitmvi-keys.gpg
            echo "${{secrets.GPG_GRADLE_PROPERTIES}}" > $HOME/.gradle/gradle.properties

      - name: Prepare tag properties (windows)
        if: runner.os == 'Windows' &&  startsWith(github.ref, 'refs/tags/')
        run: |
            echo "${{secrets.GPG_SIGNING_SECRET_KEY_RING_FILE_BASE64}}" > $HOME/.gradle/sonatype-orbitmvi-keys.gpg.b64
            certutil -decode $HOME/.gradle/sonatype-orbitmvi-keys.gpg.b64 $HOME/.gradle/sonatype-orbitmvi-keys.gpg
            echo "${{secrets.GPG_GRADLE_PROPERTIES}}" > $HOME/.gradle/gradle.properties

      - name: Upload tag
        if: startsWith(github.ref, 'refs/tags/')
        env:
            SONATYPE_REPOSITORY_ID: ${{ needs.create_staging_repository.outputs.repository_id }}
        run: ./gradlew publish --no-daemon --no-parallel -Psigning.secretKeyRingFile=$(echo ~/.gradle/sonatype-orbitmvi-keys.gpg)

  close:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
            distribution: 'zulu'
            java-version: '11'

      - name: gradle cache
        uses: actions/cache@v1
        with:
            path: ~/.gradle/caches
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
            restore-keys: |
                ${{ runner.os }}-gradle-

      - name: gradle wrapper cache
        uses: actions/cache@v1
        with:
            path: ~/.gradle/wrapper/dists
            key: ${{ runner.os }}-gradlewrapper

      - name: konan cache
        uses: actions/cache@v1
        with:
            path: ~/.konan
            key: ${{ runner.os }}-konan

      - name: Prepare tag properties (*nix)
        run: |
          mkdir -p $HOME/.gradle
          echo "${{secrets.GPG_SIGNING_SECRET_KEY_RING_FILE_BASE64}}" > $HOME/.gradle/sonatype-orbitmvi-keys.gpg.b64
          base64 -d $HOME/.gradle/sonatype-orbitmvi-keys.gpg.b64 > $HOME/.gradle/sonatype-orbitmvi-keys.gpg
          echo "${{secrets.GPG_GRADLE_PROPERTIES}}" > $HOME/.gradle/gradle.properties

      - name: Close and release tag
        run: ./gradlew closeAndReleaseRepository
